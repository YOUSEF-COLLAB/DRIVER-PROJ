{"ast":null,"code":"// src/api/index.js\nconst BASE_URL = 'http://localhost:8080'; // Adjust if your backend is hosted elsewhere\n\nexport const signup = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return response.json();\n};\nexport const login = async (email, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return response.json();\n};\nexport const predictBehavior = async sensorData => {\n  const response = await fetch(`${BASE_URL}/predict_behavior`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(sensorData)\n  });\n  return response.json();\n};\nexport const getFuelUsage = async (carType, speed, hours) => {\n  const response = await fetch(`${BASE_URL}/fuel-usage?car_type=${carType}&speed=${speed}&hours=${hours}`);\n  return response.json();\n};\nexport const getVehicleStatus = async (speed, rpm) => {\n  const response = await fetch(`${BASE_URL}/vehicle?speed=${speed}&rpm=${rpm}`);\n  return response.json();\n};\nexport const getDriverScore = async (speed, rpm) => {\n  const response = await fetch(`${BASE_URL}/driver-score?speed=${speed}&rpm=${rpm}`);\n  return response.json();\n};\nexport const emergencyAlert = async (latitude, longitude) => {\n  const response = await fetch(`${BASE_URL}/emergency?latitude=${latitude}&longitude=${longitude}`);\n  return response.json();\n};\nexport const autoPark = async (latitude, longitude, speed) => {\n  const response = await fetch(`${BASE_URL}/auto-park?latitude=${latitude}&longitude=${longitude}&speed=${speed}`);\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","login","predictBehavior","sensorData","getFuelUsage","carType","speed","hours","getVehicleStatus","rpm","getDriverScore","emergencyAlert","latitude","longitude","autoPark"],"sources":["C:/Users/HP/Documents/apii/drivepulse-tracker/src/index.js"],"sourcesContent":["// src/api/index.js\r\nconst BASE_URL = 'http://localhost:8080'; // Adjust if your backend is hosted elsewhere\r\n\r\nexport const signup = async (email, password) => {\r\n  const response = await fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const predictBehavior = async (sensorData) => {\r\n  const response = await fetch(`${BASE_URL}/predict_behavior`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(sensorData)\r\n  });\r\n  return response.json();\r\n};\r\n\r\nexport const getFuelUsage = async (carType, speed, hours) => {\r\n  const response = await fetch(`${BASE_URL}/fuel-usage?car_type=${carType}&speed=${speed}&hours=${hours}`);\r\n  return response.json();\r\n};\r\n\r\nexport const getVehicleStatus = async (speed, rpm) => {\r\n  const response = await fetch(`${BASE_URL}/vehicle?speed=${speed}&rpm=${rpm}`);\r\n  return response.json();\r\n};\r\n\r\nexport const getDriverScore = async (speed, rpm) => {\r\n  const response = await fetch(`${BASE_URL}/driver-score?speed=${speed}&rpm=${rpm}`);\r\n  return response.json();\r\n};\r\n\r\nexport const emergencyAlert = async (latitude, longitude) => {\r\n  const response = await fetch(`${BASE_URL}/emergency?latitude=${latitude}&longitude=${longitude}`);\r\n  return response.json();\r\n};\r\n\r\nexport const autoPark = async (latitude, longitude, speed) => {\r\n  const response = await fetch(`${BASE_URL}/auto-park?latitude=${latitude}&longitude=${longitude}&speed=${speed}`);\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,SAAS,EAAE;IACjDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOV,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,QAAQ,EAAE;IAChDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,mBAAmB,EAAE;IAC3DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,UAAU;EACjC,CAAC,CAAC;EACF,OAAOV,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,KAAK,EAAEC,KAAK,KAAK;EAC3D,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,wBAAwBgB,OAAO,UAAUC,KAAK,UAAUC,KAAK,EAAE,CAAC;EACxG,OAAOd,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAG,MAAAA,CAAOF,KAAK,EAAEG,GAAG,KAAK;EACpD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,kBAAkBiB,KAAK,QAAQG,GAAG,EAAE,CAAC;EAC7E,OAAOhB,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAAA,CAAOJ,KAAK,EAAEG,GAAG,KAAK;EAClD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,uBAAuBiB,KAAK,QAAQG,GAAG,EAAE,CAAC;EAClF,OAAOhB,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;EAC3D,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,uBAAuBuB,QAAQ,cAAcC,SAAS,EAAE,CAAC;EACjG,OAAOpB,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMc,QAAQ,GAAG,MAAAA,CAAOF,QAAQ,EAAEC,SAAS,EAAEP,KAAK,KAAK;EAC5D,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,uBAAuBuB,QAAQ,cAAcC,SAAS,UAAUP,KAAK,EAAE,CAAC;EAChH,OAAOb,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}